apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}-deployment-template
  namespace: 6e2f55-tools
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${NAME}-persistent
      template: ${NAME}-persistent-template
    name: ${BACKUP_VOLUME_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${BACKUP_VOLUME_SIZE}
    storageClassName: ${BACKUP_VOLUME_CLASS}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${NAME}-persistent
      template: ${NAME}-persistent-template
    name: ${VERIFICATION_VOLUME_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VERIFICATION_VOLUME_SIZE}
    storageClassName: ${VERIFICATION_VOLUME_CLASS}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the ${NAME} server
    labels:
      template: ${NAME}-deployment
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}
          role: backup
        name: ${NAME}
      spec:
        containers:
        - env:
          - name: BACKUP_STRATEGY
            value: ${BACKUP_STRATEGY}
          - name: BACKUP_DIR
            value: ${BACKUP_DIR}
          - name: NUM_BACKUPS
            value: ${NUM_BACKUPS}
          - name: DAILY_BACKUPS
            value: ${DAILY_BACKUPS}
          - name: WEEKLY_BACKUPS
            value: ${WEEKLY_BACKUPS}
          - name: MONTHLY_BACKUPS
            value: ${MONTHLY_BACKUPS}
          - name: BACKUP_PERIOD
            value: ${BACKUP_PERIOD}
          - name: DATABASE_NAME
            value: ${DATABASE_NAME}
          - name: MONGODB_AUTHENTICATION_DATABASE
            value: ${MONGODB_AUTHENTICATION_DATABASE}
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: ${DATABASE_USER_KEY_NAME}
                name: mongodb-creds
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: ${DATABASE_PASSWORD_KEY_NAME}
                name: mongodb-creds
          - name: ENVIRONMENT_FRIENDLY_NAME
            value: ${ENVIRONMENT_FRIENDLY_NAME}
          - name: ENVIRONMENT_NAME
            value: ${ENVIRONMENT_NAME}
          image: ""
          name: ${NAME}
          ports: []
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          volumeMounts:
          - mountPath: ${BACKUP_DIR}
            name: ${BACKUP_VOLUME_NAME}
          - mountPath: ${VERIFICATION_VOLUME_MOUNT_PATH}
            name: ${VERIFICATION_VOLUME_NAME}
          - mountPath: ${CONFIG_MOUNT_PATH}${CONFIG_FILE_NAME}
            name: ${NAME}-config-volume
            subPath: ${CONFIG_FILE_NAME}
        volumes:
        - name: ${BACKUP_VOLUME_NAME}
          persistentVolumeClaim:
            claimName: ${BACKUP_VOLUME_NAME}
        - name: ${VERIFICATION_VOLUME_NAME}
          persistentVolumeClaim:
            claimName: ${VERIFICATION_VOLUME_NAME}
        - configMap:
            items:
            - key: ${CONFIG_FILE_NAME}
              path: ${CONFIG_FILE_NAME}
            name: ${CONFIG_MAP_NAME}
          name: ${NAME}-config-volume
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${SOURCE_IMAGE_NAME}:${TAG_NAME}
          namespace: ${IMAGE_NAMESPACE}
      type: ImageChange
parameters:
- description: >
    The name assigned to all of the resources.  Use 'backup-{database name}'
    depending on your database provider
  displayName: Name
  name: NAME
  required: true
  value: mongodb-backup
- description: >
    The name of the image to use for this resource. Use 'backup-{database
    name}' depending on your database provider
  displayName: Source Image Name
  name: SOURCE_IMAGE_NAME
  required: true
  value: backup-container
- description: >
    The namespace of the OpenShift project containing the imagestream for
    the application.
  displayName: Image Namespace
  name: IMAGE_NAMESPACE
  required: true
  value: 6e2f55-tools
- description: The TAG name for this environment, e.g., dev, test, prod
  displayName: Environment TAG name
  name: TAG_NAME
  required: true
  value: latest
- description: >
    Used for backward compatibility only. Not needed when using the
    recommended 'backup.conf' configuration.  The name of the database.
  displayName: Database Name
  name: DATABASE_NAME
  required: false
  value: ""
- description: >
    This is only required if you are backing up mongo database with a
    separate authentication database.
  displayName: MongoDB Authentication Database
  name: MONGODB_AUTHENTICATION_DATABASE
  required: false
  value: ""
- description: >
    The datbase user key name stoed in database deployment resources
    specified by DATABASE_DEPLOYMENT_NAME.
  displayName: Database User Key Name
  name: DATABASE_USER_KEY_NAME
  required: true
  value: username
- description: >
    The database password key name stored in database deployment resources
    specified by DATABASE_DEPLOYMENT_NAME.
  displayName: Database Password Key Name
  name: DATABASE_PASSWORD_KEY_NAME
  required: true
  value: password
- description: >
    The strategy to use for backups; for example daily, or rolling.
  displayName: Backup Strategy
  name: BACKUP_STRATEGY
  required: true
  value: rolling
- description: >
    The human readable name of the environment.  This variable is used
    by the webhook integration to identify the environment in which the
    backup notifications originate.
  displayName: Friendly Environment Name
  name: ENVIRONMENT_FRIENDLY_NAME
  required: false
  value: ""
- description: >
    The name or Id of the environment.  This variable is used by the webhook
    integration to identify the environment in which the backup
    notifications originate.
  displayName: Environment Name (Environment Id)
  name: ENVIRONMENT_NAME
  required: false
  value: ""
- description: >
    The name of the root backup directory. The backup volume will be mounted
    to this directory.
  displayName: The root backup directory
  name: BACKUP_DIR
  required: true
  value: /backups/
- description: >
    Used for backward compatibility only.  Ignored when using the recommended
    `rolling` backup strategy.  The number of backup files to be retained.
    Used for the `daily` backup strategy.
  displayName: The number of backup files to be retained
  name: NUM_BACKUPS
  required: false
  value: ""
- description: >
    The number of daily backup files to be retained. Used for the `rolling`
    backup strategy.
  displayName: Number of Daily Backups to Retain
  name: DAILY_BACKUPS
  required: false
  value: ""
- description: >
    The number of weekly backup files to be retained. Used for the `rolling`
    backup strategy.
  displayName: Number of Weekly Backups to Retain
  name: WEEKLY_BACKUPS
  required: false
  value: ""
- description: >
    The number of monthly backup files to be retained. Used for the `rolling`
    backup strategy.
  displayName: Number of Monthly Backups to Retain
  name: MONTHLY_BACKUPS
  required: false
  value: ""
- description: >
    Used for backward compatibility only. Ignored when using the recommended
    `backup.conf` and cron backup strategy. Period (d,m,s) between backups
    in a format used by the sleep command
  displayName: >
    Period (d,m,s) between backups in a format used by the sleep command
  name: BACKUP_PERIOD
  required: false
  value: ""
- description: The name of the configuration file.
  displayName: Config File Name
  name: CONFIG_FILE_NAME
  required: true
  value: backup.conf
- description: The name of the configuration map.
  displayName: Config Map Name
  name: CONFIG_MAP_NAME
  required: true
  value: rocketchat-backup-config
- description: The path to use to mount the config file.
  displayName: Config Mount Path
  name: CONFIG_MOUNT_PATH
  required: true
  value: /
- description: >
    The name of the persistent volume used to store the backups.  Please
    note, when using the recommended nfs-backup storage class the name of 
    the pvc MUST be taken from the manually provisioned claim; nfs-backup
    storage MUST be provisioned manually.
  displayName: Backup Volume Name
  name: BACKUP_VOLUME_NAME
  required: true
  value: backup
- description: >
    The size of the persistent volume used to store the backups, e.g. 512Mi,
    1Gi, 2Gi.  Ensure this is sized correctly. Refer to the container
    documentation for details.
  displayName: Backup Volume Size
  name: BACKUP_VOLUME_SIZE
  required: true
  value: 5Gi
- description: >
    The class of the persistent volume used to store the backups;
    netapp-block-standard, netapp-file-standard, nfs-backup. Please note,
    nfs-backup storage is the recommended storage type for backups. It MUST
    be provisioned manually through the OCP catalog via the 'BC Gov NFS
    Storage' template. nfs-backup storage CANNOT be automatically
    provisioned by this template.
  displayName: Backup Volume Class
  name: BACKUP_VOLUME_CLASS
  required: true
  value: netapp-file-backup
- description: >
    The name for the verification volume, used for restoring and verifying
    backups.  When using the recommend nfs-backup storage class for backups,
    this volume MUST be either netapp-file-standard or netapp-block-standard
    storage; netapp-block-standard is recommended (it has far better
    performance).
  displayName: Verification Volume Name
  name: VERIFICATION_VOLUME_NAME
  required: false
  value: backup-verification
- description: >
    The size of the persistent volume used for restoring and verifying
    backups, e.g. 512Mi, 1Gi, 2Gi.  Ensure this is sized correctly.
    It should be large enough to contain your largest database.
  displayName: Backup Volume Size
  name: VERIFICATION_VOLUME_SIZE
  required: true
  value: 1Gi
- description: >
    The class of the persistent volume used for restoring and verifying
    backups; should be one of netapp-block-standard or netapp-file-standard.
    netapp-block-standard performs better.
  displayName: Backup Volume Class
  name: VERIFICATION_VOLUME_CLASS
  required: true
  value: netapp-file-standard
- description: >
    The path on which to mount the verification volume.  This is used by
    the database server to contain the database configuration and data files.
    For Mongo, please use /var/lib/mongodb/data. For MSSQL, please use 
    /var/opt/mssql/data
  displayName: Verification Volume Mount Path
  name: VERIFICATION_VOLUME_MOUNT_PATH
  required: true
  value: /var/lib/mongodb/data
- description: The resources CPU request (in cores) for this build.
  displayName: Resources CPU Request
  name: CPU_REQUEST
  required: true
  value: "0"
- description: The resources CPU limit (in cores) for this build.
  displayName: Resources CPU Limit
  name: CPU_LIMIT
  required: true
  value: "0"
- description: The resources Memory request (in Mi, Gi, etc) for this build.
  displayName: Resources Memory Request
  name: MEMORY_REQUEST
  required: true
  value: 0Mi
- description: The resources Memory limit (in Mi, Gi, etc) for this build.
  displayName: Resources Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 0Mi
