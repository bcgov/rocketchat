# Copyright 2021 The Province of British Columbia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rocketchat
  name: rocketchat
spec:
  ports:
  - name: 3000-tcp
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: rocketchat
  type: ClusterIP
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: rocketchat
  name: rocketchat-uploads
spec:
  storageClassName: netapp-file-standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumename: rocketchat-uploads
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rocketchat
  name: rocketchat
spec:
  strategy:
    type: Recreate
  triggers:
    - type: ConfigChange
  replicas: 1
  selector:
    matchLabels:
      app: rocketchat
      role: server
  template:
    metadata:
      labels:
        app: rocketchat
        role: server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: 
                - rocketchat
            topologyKey: kubernetes.io/hostname
      volumes:
        - name: rocketchat-uploads
          persistentVolumeClaim:
            claimName: rocketchat-uploads
            # defaultMode: 0744
      containers:
        - name: rocketchat
          image: image-registry.openshift-image-registry.svc:5000/6e2f55-tools/rocket.chat:2.4
          ports:
            - name: server-port
              containerPort: 3000
              protocol: TCP
          startupProbe:
            httpGet:
              path: /api/info
              port: server-port
              scheme: HTTP
            failureThreshold: 54
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/info
              port: server-port
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/info
              port: server-port
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 896Mi
            requests:
              memory: 512Mi
              cpu: 50m
          envFrom: 
            - configMapRef:
                name: rocketchat-config
            - secretRef:
                name: mongodb-creds
            - secretRef:
                name: rocketchat-creds
            - secretRef:
                name: rocketchat-sso-creds
          volumeMounts:
            - name: rocketchat-uploads
              mountPath: /app/uploads
      terminationMessagePath: /dev/termination-log
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
