# Copyright 2021 The Province of British Columbia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
kind: Service
apiVersion: v1
metadata:
  name: mongodb
  labels:
    app: rocketchat
spec:
  ports:
    - name: mongodb
      port: 27017
  selector:
    statefulset: mongodb
---
kind: Service
apiVersion: v1
metadata:
  name: mongodb-internal
  labels:
    app: rocketchat
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:    
  clusterIP: None
  ports:
    - name: mongodb
      port: 27017
  selector:
    statefulset: mongodb
---
kind: Service
apiVersion: v1
metadata:
  name: mongodb-primary
  labels:
    app: rocketchat
spec:
  ports:
    - name: mongodb
      protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    statefulset.kubernetes.io/pod-name: mongodb-0
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: mongodb
  labels:
    app: rocketchat
spec:
  selector:
    matchLabels:
      statefulset: mongodb
  serviceName: mongodb-internal
  replicas: 1
  template:
    metadata:
      labels:
        app: rocketchat
        statefulset: mongodb
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values: 
                - mongodb
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: artifactory-creds
      containers:
        - name: mongo-container
          image: mongo:3.6
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
          args:
            - "run-mongod-replication"
          volumeMounts:
            - name: mongo-data
              mountPath: /var/lib/mongodb/data
          envFrom: 
            - configMapRef:
                name: mongodb-env
          resources:
            limits:
              memory: 1024Mi
              cpu: 100m
            requests:
              memory: 512Mi
              cpu: 80m
          readinessProbe:
            exec:
              command:
                - stat
                - /tmp/initialized
            initialDelaySeconds: 10
            periodSeconds: 3
            failureThreshold: 10
              # command:
              #   - /bin/bash
              #   - -o 
              #   - pipefail
              #   - -ec
              #   - >-
              #     mongo --quiet 
              #     -u $MONGO_INITDB_ROOT_USERNAME 
              #     -p $MONGO_INITDB_ROOT_PASSWORD 
              #     --eval "db.adminCommand('ping')" | 
              #     /bin/grep -Eq '\"ok\"[[:space:]]+:[[:space:]]+1'
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: mongo-data
        labels:
          app: rocketchat
          name: mongodb
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1G
        storageClassName: netapp-block-standard
        volumeMode: Filesystem
